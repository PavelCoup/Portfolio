dnsprefix: bootcamp.lan
project_name: test
docker_network_name: net_{{ project_name }}
nginx_image: "nginx:1.23.2"
nginx_host_type: testlab
nginx_environments:
  - environment: dev
    backend_port: 8080
    db_port: 3306
  - environment: qa
    backend_port: 8080
    db_port: 3306
ngins_custom_locations: ''
nginx_proxy_: |
  proxy_read_timeout 120s;
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_pass_request_headers on;
nginx_cors: |
  if ($host ~* ^({% for item in nginx_environments -%}{{ item.environment }}.{{ project_name }}.{{ dnsprefix }}{% if not loop.last -%}|{%- endif %}{%- endfor %}|127.0.0.1|localhost)$) {
      add_header 'Access-Control-Allow-Origin' $http_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,Range' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header Content-Security-Policy "worker-src blob:;
      child-src blob: gap:;
      img-src 'self' blob: data:;
      default-src * 'self' 'unsafe-inline' 'unsafe-eval' data: gap: content:" always;
  }
